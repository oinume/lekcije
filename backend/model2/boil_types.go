// Code generated by SQLBoiler 4.6.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package model2

import (
	"strconv"

	"github.com/friendsofgo/errors"
	"github.com/volatiletech/sqlboiler/v4/boil"
	"github.com/volatiletech/strmangle"
)

// M type is for providing columns and column values to UpdateAll.
type M map[string]interface{}

// ErrSyncFail occurs during insert when the record could not be retrieved in
// order to populate default value information. This usually happens when LastInsertId
// fails or there was a primary key configuration that was not resolvable.
var ErrSyncFail = errors.New("model2: failed to synchronize data after insert")

type insertCache struct {
	query        string
	retQuery     string
	valueMapping []uint64
	retMapping   []uint64
}

type updateCache struct {
	query        string
	valueMapping []uint64
}

func makeCacheKey(cols boil.Columns, nzDefaults []string) string {
	buf := strmangle.GetBuffer()

	buf.WriteString(strconv.Itoa(cols.Kind))
	for _, w := range cols.Cols {
		buf.WriteString(w)
	}

	if len(nzDefaults) != 0 {
		buf.WriteByte('.')
	}
	for _, nz := range nzDefaults {
		buf.WriteString(nz)
	}

	str := buf.String()
	strmangle.PutBuffer(buf)
	return str
}

// Enum values for lesson.status
const (
	LessonStatusFinished  = "finished"
	LessonStatusReserved  = "reserved"
	LessonStatusAvailable = "available"
	LessonStatusCancelled = "cancelled"
)

// Enum values for stat_daily_notification_event.event
const (
	StatDailyNotificationEventEventClick     = "click"
	StatDailyNotificationEventEventDelivered = "delivered"
	StatDailyNotificationEventEventOpen      = "open"
	StatDailyNotificationEventEventDeferred  = "deferred"
	StatDailyNotificationEventEventDropped   = "dropped"
	StatDailyNotificationEventEventBounce    = "bounce"
	StatDailyNotificationEventEventBlock     = "block"
)

// Enum values for stat_daily_user_notification_event.event
const (
	StatDailyUserNotificationEventEventOpen = "open"
)

// Enum values for stat_new_lesson_notifier.event
const (
	StatNewLessonNotifierEventClick     = "click"
	StatNewLessonNotifierEventDelivered = "delivered"
	StatNewLessonNotifierEventOpen      = "open"
	StatNewLessonNotifierEventDeferred  = "deferred"
	StatNewLessonNotifierEventDropped   = "dropped"
	StatNewLessonNotifierEventBounce    = "bounce"
	StatNewLessonNotifierEventBlock     = "block"
)

// Enum values for teacher.gender
const (
	TeacherGenderFemale = "female"
	TeacherGenderMale   = "male"
	TeacherGenderOther  = "other"
)
